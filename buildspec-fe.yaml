version: 0.2

env:
  variables:
    AWS_ACCESS_KEY_ID: "${AWS_ACCESS_SU_ID}"
    AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_SU_KEY}"
    ECR_URL: "${ECR_REGISTRY}"
    AWS_REGION: "ap-northeast-2"
    CLUSTER_NAME: "mlr-prd-eks-cls"
    TOKEN_GITHUB: "${TOKEN_GITHUB}"

phases:
  install:
    commands:
      - echo Setting up AWS CLI credentials...
      - aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
      - aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
      - aws configure set default.region ${AWS_REGION}
      - echo Setting up kubectl...
      - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - chmod +x kubectl
      - mv kubectl /usr/local/bin/
      - echo Logging in to Amazon ECR in Seoul region...
      - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_URL}

  pre_build:
    commands:
      - echo Verifying AWS CLI credentials...
      - aws sts get-caller-identity
      - echo Verifying EKS cluster access...
      - aws eks describe-cluster --region ${AWS_REGION} --name ${CLUSTER_NAME}
      - echo Setting up kubeconfig...
      - aws eks --region ${AWS_REGION} update-kubeconfig --name ${CLUSTER_NAME} || { echo 'kubeconfig update failed' ; exit 1; }
      - echo "Kubeconfig file contents:"
      - cat ~/.kube/config
      - echo Pulling the latest Docker images from ECR...
      - docker pull ${ECR_URL}/mylittlerecipebook/mlr-prd-fe-img:latest

  build:
    commands:
      - echo Cloning GitOps repository...
      - git clone https://x-access-token:${TOKEN_GITHUB}@github.com/aws-final-6/food-frontend.git
      - cd food-frontend
      - echo Verifying Kubernetes access...
      - kubectl get nodes || { echo 'kubectl get nodes failed' ; kubectl config view ; kubectl config current-context ; exit 1; }
      - echo Updating Kubernetes deployment with the new image...
      - sed -i "s|${ECR_URL}/mylittlerecipebook/mlr-prd-fe-img:[^ ]*|${ECR_URL}/mylittlerecipebook/mlr-prd-fe-img:${IMAGE_TAG}|g" fe_deployment.yaml
      - kubectl apply -f fe_deployment.yaml

  post_build:
    commands:
      - echo Deployment completed.

artifacts:
  files:
    - '**/*'
  discard-paths: yes
