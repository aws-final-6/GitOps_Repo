version: 0.2

env:
  variables:
    GITHUB_REPO: "https://github.com/aws-final-6/GitOps_Repo.git"
    GITHUB_DIR: "GitOps_Repo"
    AWS_REGION: "ap-northeast-2"
    AWS_EKS_REGION: "ap-northeast-2"
    ECR_REGISTRY: "761278642645.dkr.ecr.ap-northeast-2.amazonaws.com"
    TOKEN_GITHUB: "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"
    KUBERNETES_CLUSTER_NAME: "mlr-prd-eks-cls"
    KUBERNETES_NAMESPACE: "default"

phases:
  install:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - export LOGIN_PASSWORD=$(aws ecr get-login-password --region $AWS_REGION)
      - echo $LOGIN_PASSWORD | docker login --username AWS --password-stdin $ECR_REGISTRY
      - export AWS_ACCESS_KEY_ID=AKIA3CP56HHK356EWBOZ
      - export AWS_SECRET_ACCESS_KEY=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
      - export ACCOUNT_ID=761278642645

  pre_build:
    commands:
      - set -e
      - echo Verifying EKS cluster access...
      - aws eks describe-cluster --region ${AWS_REGION} --name mlr-prd-eks-cls --debug

      - echo Setting up kubeconfig...
      - aws eks update-kubeconfig --region ${AWS_REGION} --name mlr-prd-eks-cls || { echo 'kubeconfig update failed' ; exit 1; }

      - echo "Kubeconfig file contents:"
      - cat ~/.kube/config
      - kubectl config current-context

      - echo "Getting Kubernetes nodes..."
      - TOKEN=$(aws eks get-token --region ${AWS_REGION} --cluster-name ${KUBERNETES_CLUSTER_NAME} --output json | jq -r '.status.token')
      - echo $TOKEN
      - export KUBECONFIG=~/.kube/config
      - kubectl get nodes || { echo 'kubectl get nodes failed' ; kubectl config view ; kubectl config current-context ; exit 1; }

  build:
    commands:
      - set -e
      - echo Cloning GitOps repository...
      - git clone https://x-access-token:${TOKEN_GITHUB}@github.com/aws-final-6/food-frontend.git

      - echo Verifying Kubernetes access...
      - kubectl get nodes || { echo 'kubectl get nodes failed' ; kubectl config view ; kubectl config current-context ; exit 1; }

  post_build:
    commands:
      - echo Updating kubeconfig...
      - aws eks --region $AWS_EKS_REGION update-kubeconfig --name $KUBERNETES_CLUSTER_NAME
      - cat ~/.kube/config
      - kubectl config get-contexts
      - echo Deploying to Kubernetes...
      - kubectl apply -f fe_deployment.yaml

artifacts:
  files:
    - '**/*'
  discard-paths: yes
