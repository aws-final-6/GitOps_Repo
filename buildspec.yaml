version: 0.2

phases:
  install:
    commands:
      - echo check aws-cli version
      - aws --version
      - echo install kubectl
      - curl -LO https://dl.k8s.io/release/v1.30.0/bin/linux/amd64/kubectl
      - curl -LO https://dl.k8s.io/release/v1.30.0/bin/linux/amd64/kubectl.sha256
      - echo checking the sha256sum...
      - echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
      - echo Setting up kubeconfig...
      - chmod +x ./kubectl
      - mkdir -p /usr/local/bin
      - mv ./kubectl /usr/local/bin/kubectl
      - echo kubectl version
      - kubectl version --client

  pre_build:
    commands:
      - echo "Getting EKS Cluster..."
      - aws eks describe-cluster --region ${AWS_EKS_REGION} --name ${CLUSTER_NAME}
      - echo "Update Kubeconfig..."
      - aws eks update-kubeconfig --name ${CLUSTER_NAME} --region ${AWS_EKS_REGION}
      - echo "Contents of kubeconfig:"
      - cat ~/.kube/config
      - TOKEN=$(aws eks get-token --cluster-name ${CLUSTER_NAME} --region ${AWS_EKS_REGION} | jq -r '.status.token')
      - kubectl --token=$TOKEN get nodes --v=8
      - echo "Getting Kubernetes nodes..."
      - kubectl get nodes --v=8

  build:
    commands:
      - echo "Apply all object manifest"
      - kubectl apply -f .

  post_build:
    commands:
      - echo check pod in all namespace
      - kubectl get po -A
      - echo check all in all namespace
      - kubectl get all -A
      - echo check deployment state...
      - kubectl rollout status deployment -A 

artifacts:
  files:
    - '**/*'
  discard-paths: yes
